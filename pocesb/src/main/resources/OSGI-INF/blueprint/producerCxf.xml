<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
           xmlns:jaxws="http://cxf.apache.org/blueprint/jaxws"
           xmlns:cxf="http://cxf.apache.org/blueprint/core"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
           xsi:schemaLocation="
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://cxf.apache.org/blueprint/jaxws http://cxf.apache.org/schemas/blueprint/jaxws.xsd
             http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
             ">

  <bean id="helloBean" class="com.allocatesoftware.pocesb.HelloBean">
      <property name="say" value="Hi from Camel"/>
  </bean>
   
  <camelcxf:cxfEndpoint id="serviceEndpoint"
                     address="/pocesb/webservices/helloService"
                     wsdlURL="META-INF/wsdl/say_hi.wsdl"
                     serviceClass="com.allocatesoftware.pocesb.SayHiEndpoint">
  </camelcxf:cxfEndpoint>
  
  	<bean id="ProcessPOJOBody" class="com.allocatesoftware.pocesb.ProcessPOJOBody">
	</bean>
	
	
  
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="tcp://localhost:61616"/>
    <property name="userName" value="smx"/>
    <property name="password" value="smx"/>
  </bean>
  

  <camelContext trace="false" id="blueprintContext" xmlns="http://camel.apache.org/schema/blueprint">
  
  <dataFormats>
   <!--  <jaxb id="myJaxb" prettyPrint="true" contextPath="com.allocatesoftware.pocesb"/> -->
     <json id="jack" library="Jackson" xmlns="http://camel.apache.org/schema/spring"/>
</dataFormats>
  

  
  
    <route id="producerCxf">
        <from uri="cxf:bean:serviceEndpoint?dataFormat=POJO"/>
        <log message="${headers}"/>
        <!-- <log message="${body}"/> -->
     
         <process ref="ProcessPOJOBody"/>
         <log message="Converted body to Person"/>
          <marshal  ref="jack"/>



 <!--        <convertBodyTo type="String"/> -->
        <log message="Converted body to string"/>
        <inOnly uri="activemq:topic:Producer?jmsMessageType=Text"/>
        <log message="Before Transformation:"/>
        <log message="${headers}"/>
<!--         <log message="${body}"/> -->
        <transform>
            <constant>&lt;out&gt;1&lt;/out&gt;</constant>
        </transform>
        <log message="After Transformation:"/>
        <log message="${headers}"/>
        <log message="${body}"/>
    </route>
</camelContext>

<!--         <from uri="reportIncident"/>
        <log message="The message contains ${body}"/> -->

</blueprint>
